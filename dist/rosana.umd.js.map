{"version":3,"file":"rosana.umd.js","sources":["../.src/helpers.ts","../.src/parser.ts","../.src/control.ts","../.src/layouts.ts","../.src/signals.ts","../.src/+rosana.core.ts","../.src/router.ts","../.src/showif.ts","../.src/elements.ts","../.src/html.ts"],"sourcesContent":["const createUniqueIdGenerator = (prefix: string): Function => {\r\n    let count = 0;\r\n    return () => `${prefix}-${count++}`;\r\n};\r\n\r\nexport const generateId = createUniqueIdGenerator(\"rosana-id\");\r\nexport const generateClassName = createUniqueIdGenerator(\"rosana-class\");\r\n\r\ntype SystemTheme = \"dark\" | \"light\";\r\n\r\n/**\r\n * Returns the system device theme; works in a browser environment.\r\n */\r\nexport const $pageTheme = function (): SystemTheme {\r\n    const darkThemeMq = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n    return darkThemeMq.matches ? \"dark\" : \"light\";\r\n};\r\n\r\n/**\r\n * Attaches an event listener to the document body.\r\n */\r\nexport const $on = function (event: string, handlerFn: EventListener | EventListenerObject) {\r\n    document.addEventListener(event, handlerFn);\r\n};\r\n","import { generateClassName } from \"./helpers.js\";\r\n\r\nexport const cssParser = (styles: TemplateStringsArray | Record<string, any>, ...values: any[]): string => {\r\n    const className = generateClassName();\r\n    const styleSheet = document.styleSheets[0];\r\n    let cssString = \"\";\r\n\r\n    let nestedCssRules: Array<{ selector: string; styles: Record<string, any> }> = [];\r\n    let mediaQueryRules: Array<{ media: string; selector: string; styles: Record<string, any> }> = [];\r\n\r\n    const parseStyles = (styles: Record<string, any>, selector: string): string => {\r\n        let baseStyles = \"\";\r\n        Object.entries(styles).forEach(([key, value]) => {\r\n            if (typeof value === \"object\") {\r\n                if (key.startsWith(\"@\")) {\r\n                    mediaQueryRules.push({ media: key, selector, styles: value });\r\n                } else if (key.startsWith(\"&:\")) {\r\n                    nestedCssRules.push({ selector: key.replace(\"&\", selector), styles: value });\r\n                } else {\r\n                    nestedCssRules.push({ selector: `${selector} ${key}`, styles: value });\r\n                }\r\n            } else {\r\n                baseStyles += `${key.replace(/([A-Z])/g, \"-$1\").toLowerCase()}: ${value}; `;\r\n            }\r\n        });\r\n        return baseStyles;\r\n    };\r\n\r\n    if (typeof styles === \"object\" && !Array.isArray(styles)) {\r\n        cssString = parseStyles(styles, `.${className}`);\r\n    } else if (Array.isArray(styles)) {\r\n        cssString = styles.reduce((result, str, i) => result + str + (values[i] || \"\"), \"\");\r\n    }\r\n\r\n    if (document.readyState === \"loading\" && cssString) {\r\n        document.head.insertAdjacentHTML(\"beforeend\", `<style>.${className} { ${cssString} }</style>`);\r\n    } else if (cssString) {\r\n        styleSheet.insertRule(`.${className} { ${cssString} }`, styleSheet.cssRules.length);\r\n    }\r\n\r\n    nestedCssRules.forEach(({ selector, styles }) => {\r\n        const nestedCssString = parseStyles(styles, selector);\r\n        if (nestedCssString) {\r\n            styleSheet.insertRule(`${selector} { ${nestedCssString} }`, styleSheet.cssRules.length);\r\n        }\r\n    });\r\n\r\n    mediaQueryRules.forEach(({ media, selector, styles }) => {\r\n        const nestedCssString = parseStyles(styles, selector);\r\n        if (nestedCssString) {\r\n            styleSheet.insertRule(\r\n                `${media} { ${selector} { ${nestedCssString} } }`,\r\n                styleSheet.cssRules.length\r\n            );\r\n        }\r\n    });\r\n\r\n    return className;\r\n};\r\n","import { optionsApi } from \"./layouts.js\";\r\nimport { cssParser } from \"./parser.js\";\r\n\r\nconst eventHandlersMap = new Map();\r\n\r\ndocument.body.addEventListener(\"click\", (event) => {\r\n    //@ts-ignore\r\n    const targetId = event.target.id;\r\n\r\n    if (eventHandlersMap.has(targetId)) {\r\n        eventHandlersMap.get(targetId)();\r\n    }\r\n});\r\n\r\nexport class componentController {\r\n    element: any;\r\n    elementClasses: Array<string>;\r\n    constructor() {\r\n        this.element = null;\r\n        this.elementClasses = [];\r\n    }\r\n\r\n    /**\r\n     * Add a child element to this element.\r\n     */\r\n    addChild(child: componentController) {\r\n        if (child instanceof componentController && this.element) {\r\n            this.element.appendChild(child.element);\r\n        } else {\r\n            console.error(\"Mounted Child Is Not A Rosana Component\");\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set the alignment of child elements in the control\r\n     */\r\n    alignment(options: string): this {\r\n        if (options) {\r\n            optionsApi(this.element, options);\r\n        } else {\r\n            console.log(\"Alignment Options Undefined\");\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * batch dom api setters and getters effeciently\r\n     */\r\n    batch(props: object): this {\r\n        Object.entries(props).forEach(([key, value]) => {\r\n            requestAnimationFrame(() => {\r\n                if (this.element) {\r\n                    this.element[key] = value;\r\n                }\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Add an onclick event listener to the element.\r\n     */\r\n    set onclick(handler: Function) {\r\n        eventHandlersMap.set(this.element?.id, handler);\r\n    }\r\n\r\n    /**\r\n     * Add css scoped styles to your element.\r\n     */\r\n    css(styles: TemplateStringsArray | object): this {\r\n        const className = cssParser(styles);\r\n        this.element?.classList.add(className);\r\n        this.elementClasses.push(className);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Remove a child element from this element.\r\n     */\r\n    destroyChild(child: componentController): this {\r\n        if (child instanceof componentController) {\r\n            eventHandlersMap.delete(child.element?.id);\r\n            child.element?.remove();\r\n        } else {\r\n            console.error(\"Child Is Not A Rosana Component\");\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Sets the visibility of the element.\r\n     */\r\n    show(): this {\r\n        this.element?.classList.add(\"show\");\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Hide the element\r\n     */\r\n    hide(): this {\r\n        this.element?.classList.add(\"hide\");\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Sets the display and visibility of the element.\r\n     */\r\n    gone(): this {\r\n        this.element?.classList.add(\"gone\");\r\n        return this;\r\n    }\r\n}\r\n","import { componentController } from \"./control.js\";\r\nimport { generateId } from \"./helpers.js\";\r\n\r\nlet viewOptions = [\r\n    \"noscrollbar\",\r\n    \"scrollxy\",\r\n    \"scrollx\",\r\n    \"scrolly\",\r\n    \"top\",\r\n    \"bottom\",\r\n    \"left\",\r\n    \"right\",\r\n    \"horizontal\",\r\n    \"vertical\",\r\n    \"vcenter\",\r\n    \"center\",\r\n    \"fillxy\",\r\n    \"fillx\",\r\n    \"filly\",\r\n];\r\n\r\n/**\r\n * Applies the provided options to the given HTML element by adding corresponding CSS classes.\r\n */\r\nexport const optionsApi = (element: HTMLElement, options: string) => {\r\n    options\r\n        .toLowerCase()\r\n        .replace(/\\s/g, \"\")\r\n        .split(\",\")\r\n        .forEach((option) => {\r\n            if (viewOptions.includes(option)) {\r\n                element.classList.add(option);\r\n            } else {\r\n                console.error(`Unknown option: ${option}`);\r\n            }\r\n        });\r\n};\r\n\r\n/**\r\n * Applies layout styles to the provided element based on the layout type and options.\r\n */\r\nfunction layoutFitApi(layout: HTMLElement, type: string, options: string) {\r\n    if (options) optionsApi(layout, options);\r\n\r\n    const layoutTYPE = type.toLowerCase();\r\n\r\n    switch (layoutTYPE) {\r\n        case \"linear\":\r\n            layout.classList.add(\"layout-linear\");\r\n            break;\r\n        case \"absolute\":\r\n            layout.classList.add(\"layout-absolute\");\r\n            break;\r\n        case \"frame\":\r\n            layout.classList.add(\"layout-frame\");\r\n            break;\r\n        case \"stack\":\r\n            const directionClass = options?.includes(\"vertical\")\r\n                ? \"layout-stack-vertical\"\r\n                : \"layout-stack-horizontal\";\r\n            layout.classList.add(directionClass);\r\n            break;\r\n        default:\r\n            console.error(\"Unknown Layout\", layoutTYPE);\r\n    }\r\n}\r\n\r\nconst $LayoutInitializer = class extends componentController {\r\n    type: string;\r\n    /**\r\n     * Creates a new layout element with the specified type and options.\r\n     */\r\n    constructor(type: string, options: string) {\r\n        super();\r\n        this.element = document.createElement(\"div\");\r\n        this.element.id = generateId();\r\n\r\n        this.type = `layout-${type}`;\r\n        type ? layoutFitApi(this.element, type, options) : null;\r\n    }\r\n};\r\n\r\n/**\r\n * Creates a linear layout with optional child alignment properties.\r\n * @param {string} [childAlignmentProperties] - Optional string for child alignment (e.g., \"top\", \"center\").\r\n */\r\nexport const $LinearLayout = function (childAlignmentProperties: string) {\r\n    return new $LayoutInitializer(\"linear\", childAlignmentProperties);\r\n};\r\n\r\n/**\r\n * Creates an absolute layout with optional child alignment properties.\r\n * @param {string} [childAlignmentProperties] - Optional string for child alignment (e.g., \"top\", \"center\").\r\n */\r\nexport const $AbsoluteLayout = function (childAlignmentProperties: string) {\r\n    return new $LayoutInitializer(\"absolute\", childAlignmentProperties);\r\n};\r\n\r\n/**\r\n * Creates a frame layout with optional child alignment properties.\r\n * @param {string} [childAlignmentProperties] - Optional string for child alignment (e.g., \"top\", \"center\").\r\n */\r\nexport const $FrameLayout = function (childAlignmentProperties: string) {\r\n    return new $LayoutInitializer(\"frame\", childAlignmentProperties);\r\n};\r\n\r\n/**\r\n * Creates a stack layout, either horizontal or vertical, with optional child alignment properties.\r\n * @param {string} [stackOrientation=\"horizontal\"] - The orientation of the stack layout (either \"horizontal\" or \"vertical\").\r\n */\r\nexport const $StackedLayout = function (stackOrientation = \"horizontal\") {\r\n    return new $LayoutInitializer(\"stack\", stackOrientation);\r\n};\r\n","/**\r\n * create a reactive value by using setters and getters.\r\n */\r\nexport const $signal = function (defaultValue: any) {\r\n    let internal_variable = defaultValue;\r\n    let subscriptions: Array<Function> = [];\r\n\r\n    const notify = function () {\r\n        for (let subscriber of subscriptions) {\r\n            subscriber(internal_variable);\r\n        }\r\n    };\r\n    return {\r\n        /**\r\n         * set the signal's value\r\n         */\r\n        set value(val: any) {\r\n            internal_variable = val;\r\n            notify();\r\n        },\r\n\r\n        /**\r\n         * returns the signals value\r\n         */\r\n        get value() {\r\n            return internal_variable;\r\n        },\r\n\r\n        /**\r\n         * subscribe to the signal\r\n         */\r\n        subscribe: (fn: Function) => {\r\n            subscriptions.push(fn);\r\n        },\r\n    };\r\n};\r\n\r\n/**\r\n * add a signal that takes in the defaultValue as an object\r\n */\r\nexport const $store = function (initialValue: object) {\r\n    let state: any = { ...initialValue };\r\n    const listeners: Set<Function> = new Set();\r\n\r\n    return {\r\n        /**\r\n         * set the signal's value\r\n         */\r\n        set(key: any, value: any) {\r\n            state[key] = value;\r\n            listeners.forEach((listener) => listener(state));\r\n        },\r\n\r\n        /**\r\n         * returns the signals value\r\n         */\r\n        get(key: any) {\r\n            return state[key];\r\n        },\r\n\r\n        /*** subscribe to the signal */\r\n        subscribe(listener: Function) {\r\n            listeners.add(listener);\r\n            return () => listeners.delete(listener);\r\n        },\r\n    };\r\n};\r\n","/**\r\n * Creates and initializes the main application with a root component.\r\n */\r\nexport const $createApp = function (mainComponent: any): object {\r\n    const app = {\r\n        _rootComponent: mainComponent,\r\n        _plugins: [],\r\n\r\n        /**\r\n         * Mounts the main component to a DOM element identified by the selector.\r\n         */\r\n        mount: function (selector: string) {\r\n            const container = document.querySelector(selector);\r\n            if (!container) {\r\n                console.error(`No element found for selector \"${selector}\"`);\r\n                return this;\r\n            }\r\n\r\n            document.body.style.margin = \"0\";\r\n            document.body.style.width = \"100%\";\r\n\r\n            container.innerHTML = \"\";\r\n            const instance = this._rootComponent;\r\n\r\n            if (instance && instance.element) {\r\n                container.appendChild(instance.element);\r\n            } else {\r\n                console.error(\"Main component does not have an element property.\");\r\n            }\r\n\r\n            //@ts-ignore\r\n            if (this.router) {\r\n                //@ts-ignore\r\n                this.router.init();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adds a plugin to the application\r\n         */\r\n        //@ts-ignore\r\n        use: function (plugin) {\r\n            if (plugin && typeof plugin.install === \"function\") {\r\n                plugin.install(this);\r\n                //@ts-ignore\r\n                this._plugins.push(plugin);\r\n            } else {\r\n                console.warn(\"Plugin is missing install method:\", plugin);\r\n            }\r\n            return this;\r\n        },\r\n    };\r\n\r\n    return app;\r\n};\r\n","/**\r\n * A secure router with route guards, 404 handling, lazy loading, and nested routes support.\r\n */\r\nclass $router {\r\n    private guards: Array<(route: any) => boolean | Promise<boolean>> = [];\r\n    private params: Record<string, string> | null = null;\r\n    private routes: Array<Route> = [];\r\n    private notFound: (() => Promise<{ default: any }>) | null = null;\r\n    private currentRoute: MatchedRoute | null = null;\r\n\r\n    constructor(routes: Array<Route>) {\r\n        this.routes = routes;\r\n        window.addEventListener(\"popstate\", () => this._handleRouteChange());\r\n    }\r\n\r\n    /**\r\n     * Attach the router to the app.\r\n     */\r\n    install(app: any): void {\r\n        app.router = this;\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * Add route guard to validate route changes.\r\n     */\r\n    addGuard(guardFn: (route: any) => boolean | Promise<boolean>): void {\r\n        this.guards.push(guardFn);\r\n    }\r\n\r\n    /**\r\n     * Set a component for 404 (not found) pages.\r\n     */\r\n    setNotFound(component: () => Promise<{ default: any }>): void {\r\n        this.notFound = component;\r\n    }\r\n\r\n    /**\r\n     * Define a new route, supporting nested routes.\r\n     */\r\n    add(path: string, component: () => Promise<{ default: any }>, options: RouteOptions = {}): void {\r\n        this.routes.push({ path, component, options });\r\n    }\r\n\r\n    /**\r\n     * Register a callback to trigger on route load.\r\n     */\r\n    on(route: string, fn: (component: any) => void): void {\r\n        const matchedRoute = this.routes.find((r) => r.path === route);\r\n        if (matchedRoute) matchedRoute.onLoad = fn;\r\n    }\r\n\r\n    /**\r\n     * Navigate to a specified route.\r\n     */\r\n    navigate(path: string, params: Record<string, string> = {}): void {\r\n        const fullPath = path.replace(/:([\\w]+)/g, (_, key) => {\r\n            if (params[key] === undefined) {\r\n                console.error(`Parameter \"${key}\" not provided for path: ${path}`);\r\n                return `:${key}`;\r\n            }\r\n            return params[key];\r\n        });\r\n\r\n        history.pushState(null, \"\", fullPath);\r\n        this._handleRouteChange();\r\n    }\r\n\r\n    /**\r\n     * Initialize the router by handling the initial route.\r\n     */\r\n    init(): void {\r\n        this._handleRouteChange();\r\n    }\r\n\r\n    /**\r\n     * Handle route changes and apply guards.\r\n     */\r\n    private async _handleRouteChange(): Promise<void> {\r\n        const path = window.location.pathname;\r\n        const matchedRoute = this._matchRoute(path, this.routes);\r\n\r\n        if (matchedRoute) {\r\n            this.params = matchedRoute.params;\r\n\r\n            for (const guard of this.guards) {\r\n                if (!(await guard(matchedRoute))) {\r\n                    console.warn(\"Navigation cancelled by guard.\");\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this.currentRoute = matchedRoute;\r\n            await this._loadComponent(matchedRoute);\r\n        } else if (this.notFound) {\r\n            //@ts-ignore\r\n            await this._loadComponent({ component: this.notFound });\r\n        } else {\r\n            console.error(`Route not found for path: ${path}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Match a route with dynamic parameters, including nested routes.\r\n     */\r\n    private _matchRoute(path: string, routes: Array<Route>): MatchedRoute | null {\r\n        for (const route of routes) {\r\n            const { regex, keys } = this._pathToRegex(route.path);\r\n            const match = path.match(regex);\r\n\r\n            if (match) {\r\n                const params = keys.reduce((acc, key, index) => {\r\n                    acc[key] = match[index + 1];\r\n                    return acc;\r\n                }, {} as Record<string, string>);\r\n\r\n                if (route.children) {\r\n                    const nestedRoute = this._matchRoute(path.replace(regex, \"\"), route.children);\r\n                    if (nestedRoute) {\r\n                        return { ...route, params, nested: nestedRoute };\r\n                    }\r\n                }\r\n\r\n                return { ...route, params };\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Convert route path to a regular expression with dynamic parameters.\r\n     */\r\n    private _pathToRegex(path: string): { regex: RegExp; keys: string[] } {\r\n        const keys: string[] = [];\r\n        const regexString = path\r\n            .replace(/:([\\w]+)/g, (_, key) => {\r\n                keys.push(key);\r\n                return \"([^\\\\/]+)\";\r\n            })\r\n            .replace(/\\//g, \"\\\\/\");\r\n\r\n        return { regex: new RegExp(`^${regexString}$`), keys };\r\n    }\r\n\r\n    /**\r\n     * Load a route component, supporting lazy loading and nested routes.\r\n     */\r\n    private async _loadComponent(route: MatchedRoute): Promise<void> {\r\n        let component = route.component;\r\n\r\n        if (typeof component === \"function\") {\r\n            const module = await component();\r\n            component = module.default;\r\n        }\r\n\r\n        if (component && typeof route.onLoad === \"function\") {\r\n            route.onLoad(component);\r\n        } else if (component) {\r\n            const container = document.querySelector(\"#app\");\r\n            if (container) {\r\n                container.innerHTML = \"\";\r\n                const instance = component;\r\n\r\n                //@ts-ignore\r\n                if (instance && instance.element) {\r\n                    //@ts-ignore\r\n                    container.appendChild(instance.element);\r\n\r\n                    //@ts-ignore\r\n                    if (typeof instance.routingInfo === \"function\") {\r\n                        //@ts-ignore\r\n                        instance.routingInfo(this.params);\r\n                    }\r\n\r\n                    if (route.nested) {\r\n                        await this._loadComponent(route.nested);\r\n                    }\r\n                } else {\r\n                    console.error(`Imported Route Is Not A Valid Component: ${instance}`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Navigate back in history.\r\n     */\r\n    back(): void {\r\n        history.back();\r\n    }\r\n\r\n    /**\r\n     * Navigate forward in history.\r\n     */\r\n    forward(): void {\r\n        history.forward();\r\n    }\r\n}\r\n\r\nexport { $router };\r\n\r\n/**\r\n * Route type definition.\r\n */\r\ninterface Route {\r\n    path: string;\r\n    component: () => Promise<{ default: any }>;\r\n    options?: RouteOptions;\r\n    onLoad?: (component: any) => void;\r\n    children?: Route[];\r\n}\r\n\r\n/**\r\n * Matched route type definition.\r\n */\r\ninterface MatchedRoute extends Route {\r\n    params: Record<string, string>;\r\n    nested?: MatchedRoute;\r\n}\r\n\r\n/**\r\n * Route options type definition.\r\n */\r\ninterface RouteOptions {\r\n    [key: string]: any;\r\n}\r\n","import { componentController } from \"./control\";\r\n\r\n/**\r\n * showIF method allows you to hide or show an element if the restingParameter is truthy\r\n */\r\nexport const $showIF = function (\r\n    restingParameter: boolean,\r\n    onTruthyElement: componentController,\r\n    onFalseyElement: componentController\r\n) {\r\n    if (onTruthyElement === undefined || onFalseyElement === undefined) {\r\n        console.error(`showIF not called, one of the elements is undefined`);\r\n        return;\r\n    }\r\n    restingParameter ? onTruthyElement.show() : onTruthyElement.hide();\r\n    !restingParameter ? onFalseyElement.show() : onFalseyElement.hide();\r\n};\r\n","import { componentController } from \"./control.js\";\r\nimport { generateId } from \"./helpers.js\";\r\n\r\ntype HtmlTag = string;\r\n\r\nexport const $Element = class extends componentController {\r\n    type: string;\r\n    parent: componentController;\r\n\r\n    constructor(tag: HtmlTag, parent: componentController) {\r\n        super();\r\n\r\n        this.type = tag.toLocaleUpperCase();\r\n        this.parent = parent;\r\n\r\n        this.element = document.createElement(tag);\r\n        this.element.id = generateId();\r\n\r\n        if (parent instanceof componentController) {\r\n            parent.addChild(this);\r\n        } else {\r\n            console.error(\"No Parent For Component To Attach To.\");\r\n            return;\r\n        }\r\n    }\r\n};\r\n","import { componentController } from \"./control.js\";\r\nimport { $Element } from \"./elements.js\";\r\n\r\nexport const $Html: Record<string, (parent: componentController) => InstanceType<typeof $Element>> = {};\r\n\r\n/**\r\n * Creates a paragraph (`<p>`) element.\r\n */\r\n$Html.P = (parent: componentController): InstanceType<typeof $Element> => {\r\n    return new $Element(\"p\", parent);\r\n};\r\n\r\n/**\r\n * Creates a division (`<div>`) element.\r\n */\r\n$Html.Div = (parent: componentController): InstanceType<typeof $Element> => {\r\n    return new $Element(\"div\", parent);\r\n};\r\n\r\n/**\r\n * Creates a span (`<span>`) element.\r\n */\r\n$Html.Span = (parent: componentController): InstanceType<typeof $Element> => {\r\n    return new $Element(\"span\", parent);\r\n};\r\n\r\n/**\r\n * Creates an image (`<img>`) element.\r\n */\r\n$Html.Image = (parent: componentController): InstanceType<typeof $Element> => {\r\n    return new $Element(\"img\", parent);\r\n};\r\n\r\n/**\r\n * Creates a button (`<button>`) element.\r\n */\r\n$Html.Button = (parent: componentController): InstanceType<typeof $Element> => {\r\n    return new $Element(\"button\", parent);\r\n};\r\n\r\n/**\r\n * Creates an input (`<input>`) element.\r\n */\r\n$Html.Input = (parent: componentController): InstanceType<typeof $Element> => {\r\n    return new $Element(\"input\", parent);\r\n};\r\n\r\n/**\r\n * Creates an unordered list (`<ul>`) element.\r\n */\r\n$Html.Ul = (parent: componentController): InstanceType<typeof $Element> => {\r\n    return new $Element(\"ul\", parent);\r\n};\r\n\r\n/**\r\n * Creates a list item (`<li>`) element.\r\n */\r\n$Html.Li = (parent: componentController): InstanceType<typeof $Element> => {\r\n    return new $Element(\"li\", parent);\r\n};\r\n\r\n/**\r\n * Creates a heading (`<h1>`) element.\r\n */\r\n$Html.H1 = (parent: componentController): InstanceType<typeof $Element> => {\r\n    return new $Element(\"h1\", parent);\r\n};\r\n\r\n/**\r\n * Creates a heading (`<h2>`) element.\r\n */\r\n$Html.H2 = (parent: componentController): InstanceType<typeof $Element> => {\r\n    return new $Element(\"h2\", parent);\r\n};\r\n\r\n/**\r\n * Creates an anchor (`<a>`) element.\r\n */\r\n$Html.A = (parent: componentController): InstanceType<typeof $Element> => {\r\n    return new $Element(\"a\", parent);\r\n};\r\n\r\n/**\r\n * Creates a form (`<form>`) element.\r\n */\r\n$Html.Form = (parent: componentController): InstanceType<typeof $Element> => {\r\n    return new $Element(\"form\", parent);\r\n};\r\n"],"names":["styles","module"],"mappings":"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"}