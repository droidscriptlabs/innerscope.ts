{"version":3,"file":"reckt.es.js","sources":["../.src/+reckt.core.js","../.src/signals.js","../.src/localize.js","../.src/router.js","../.src/debugger.js","../.src/suspense.js"],"sourcesContent":["// @ts-nocheck\r\n// reckt.js : A High Perfomance Framework\r\n//            To Write Functional Ui,\r\n//            Strongly Based on Signals.\r\n\r\n// @author\r\n// Oarabile Koore\r\n\r\n\"use strict\";\r\n\r\nimport { $signal, $store } from \"./index.js\";\r\n\r\nexport class $uiControl {\r\n    constructor() {\r\n        /** @type {HTMLElement | null} */\r\n        this.element = null;\r\n\r\n        /** @type {Array<string>} */\r\n        this.elementClasses = [];\r\n\r\n        /** @type {Array<[string, Function]>} */\r\n        this.eventListeners = [];\r\n    }\r\n\r\n    /**\r\n     * Add a child element to this element.\r\n     * @param {roseComponent} child - The child component to add.\r\n     * @returns {this} - Returns the instance of the class for chaining.\r\n     */\r\n    addChild(child) {\r\n        if (child instanceof $uiControl && this.element) {\r\n            this.element.appendChild(child.element);\r\n        } else {\r\n            console.error(\"Mounted Child Is Not A Reckt Component\");\r\n        }\r\n        return this;\r\n    }\r\n\r\n    batch(props) {\r\n        Object.entries(props).forEach(([key, value]) => {\r\n            requestAnimationFrame(() => {\r\n                if (this.element) {\r\n                    this.element[key] = value;\r\n                }\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Add an event listener to the element.\r\n     * @param {string} event - The event type.\r\n     * @param {Function} handler - The event handler function.\r\n     * @returns {this} - Returns the instance of the class for chaining.\r\n     */\r\n    on(event, handler) {\r\n        this.element?.addEventListener(event, handler);\r\n        this.eventListeners.push([event, handler]);\r\n        return this;\r\n    }\r\n\r\n    css(styles) {\r\n        const className = cssParser(styles);\r\n        this.element?.classList.add(className);\r\n        this.elementClasses.push(className);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Remove a child element from this element.\r\n     * @param {instanceOf<$uiControl>} child - The child component to remove.\r\n     * @returns {this} - Returns the instance of the class for chaining.\r\n     */\r\n    destroyChild(child) {\r\n        if (child instanceof $uiControl) {\r\n            child.eventListeners.forEach(([event, Fn]) => {\r\n                child.element?.removeEventListener(event, Fn);\r\n            });\r\n            child.element?.remove();\r\n        } else {\r\n            console.error(\"Child Is Not A Reckt Component\");\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Sets the visibility of the element.\r\n     * @param {boolean} bool - Visibility state.\r\n     */\r\n    show() {\r\n        this.css({ visibility: \"visible\" });\r\n    }\r\n\r\n    /**\r\n     * Hide the element\r\n     */\r\n    hide() {\r\n        this.css({ visibility: \"hidden\" });\r\n    }\r\n\r\n    /**\r\n     * Sets the display and visibility of the element.\r\n     * @param {boolean} bool - Visibility and space control state.\r\n     */\r\n    set gone(bool) {\r\n        this.css({\r\n            display: bool ? \"none !important\" : \"block\",\r\n            visibility: bool ? \"hidden\" : \"visible\",\r\n        });\r\n    }\r\n    childrenMargins() {}\r\n}\r\n\r\nlet idCount = 0;\r\nlet classnameCount = 0;\r\nfunction generateId() {\r\n    return `rekct-id-${idCount++}`;\r\n}\r\n\r\nfunction generateClassName() {\r\n    return `rekct-class-${classnameCount++}`;\r\n}\r\n\r\n/**\r\n * returns the system device theme, works in browser environment\r\n * @returns SystemTheme\r\n */\r\nexport const $sysTheme = function () {\r\n    const darkThemeMq = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n    if (darkThemeMq.matches) {\r\n        return \"dark\";\r\n    } else return \"light\";\r\n};\r\n\r\n/**\r\n * attach event listeners to the document body.\r\n * @param {HTMLEventListener} event\r\n * @param {Function} handlerFn\r\n */\r\nexport const $on = function (event, handlerFn) {\r\n    document.addEventListener(event, handlerFn);\r\n};\r\n\r\n/**\r\n * Add CSS properties, works with both template literals\r\n * and objects (like Emotion in React).\r\n * Automatically detects the type of\r\n * input and returns a class name.\r\n *\r\n * @param {TemplateStringsArray | object} styles - CSS styles as either a template literal or an object.\r\n * @param {...any} values - Optional values for template literals.\r\n * @returns {string} ClassName - The generated class name.\r\n */\r\n\r\nexport const cssParser = (styles, ...values) => {\r\n    const className = generateClassName();\r\n    const styleSheet =\r\n        document.styleSheets[0] ||\r\n        document.head.appendChild(document.createElement(\"style\")).sheet;\r\n\r\n    let cssString = \"\";\r\n\r\n    /**\r\n     * @type {Array<any> | null}\r\n     */\r\n    let nestedCssRules = [];\r\n\r\n    /**\r\n     * @type {Array<any> | null}\r\n     */\r\n    let mediaQueryRules = [];\r\n\r\n    /**\r\n     * Parses a style object and generates a CSS string.\r\n     * Handles nested selectors, pseudo-classes, and media queries.\r\n     *\r\n     * @param {object} styles - An object representing CSS properties and values.\r\n     * @param {string} selector - The CSS selector to apply the styles to.\r\n     * @returns {string} - A string representing the base CSS styles for the selector.\r\n     */\r\n    const parseStyles = (styles, selector) => {\r\n        let baseStyles = \"\";\r\n        Object.entries(styles).forEach(([key, value]) => {\r\n            if (typeof value === \"object\") {\r\n                if (key.startsWith(\"@\")) {\r\n                    mediaQueryRules.push({\r\n                        media: key,\r\n                        selector,\r\n                        styles: value,\r\n                    });\r\n                } else if (key.startsWith(\"&:\")) {\r\n                    // Handle pseudo-classes prefixed with \"&:\"\r\n                    const pseudoClass = key.replace(\"&\", selector);\r\n                    nestedCssRules.push({\r\n                        selector: pseudoClass,\r\n                        styles: value,\r\n                    });\r\n                } else {\r\n                    // Handle other nested selectors\r\n                    nestedCssRules.push({\r\n                        selector: `${selector} ${key}`,\r\n                        styles: value,\r\n                    });\r\n                }\r\n            } else {\r\n                baseStyles += `${key.replace(/([A-Z])/g, \"-$1\").toLowerCase()}: ${value}; `;\r\n            }\r\n        });\r\n        return baseStyles;\r\n    };\r\n\r\n    // Check if 'styles' is a template literal or an object\r\n    if (typeof styles === \"object\" && !Array.isArray(styles)) {\r\n        // It's an object, so we parse it\r\n        cssString = parseStyles(styles, `.${className}`);\r\n    } else if (Array.isArray(styles)) {\r\n        // It's a template literal, combine strings and values into CSS string\r\n        cssString = styles.reduce((result, str, i) => {\r\n            return result + str + (values[i] || \"\");\r\n        }, \"\");\r\n    }\r\n\r\n    // Insert base class CSS rule\r\n    if (cssString) {\r\n        styleSheet.insertRule(`.${className} { ${cssString} }`, styleSheet.cssRules.length);\r\n    }\r\n\r\n    // Insert nested CSS rules\r\n    nestedCssRules.forEach(({ selector, styles }) => {\r\n        const nestedCssString = parseStyles(styles, selector);\r\n        if (nestedCssString) {\r\n            const rule = `${selector} { ${nestedCssString} }`;\r\n            styleSheet.insertRule(rule, styleSheet.cssRules.length);\r\n        }\r\n    });\r\n\r\n    // Insert media query rules\r\n    mediaQueryRules.forEach(({ media, selector, styles }) => {\r\n        const nestedCssString = parseStyles(styles, selector);\r\n        if (nestedCssString) {\r\n            const rule = `${media} { ${selector} { ${nestedCssString} } }`;\r\n            styleSheet.insertRule(rule, styleSheet.cssRules.length);\r\n        }\r\n    });\r\n\r\n    return className;\r\n};\r\n\r\nlet viewOptions = [\r\n    \"noscrollbar\",\r\n    \"scrollxy\",\r\n    \"scrollx\",\r\n    \"scrolly\",\r\n    \"top\",\r\n    \"bottom\",\r\n    \"left\",\r\n    \"right\",\r\n    \"horizontal\",\r\n    \"vertical\",\r\n    \"vcenter\",\r\n    \"center\",\r\n    \"fillxy\",\r\n    \"fillx\",\r\n    \"filly\",\r\n];\r\n\r\n/**\r\n *\r\n * @param {HTMLElement} element\r\n * @param {string} options\r\n */\r\nconst optionsApi = (element, options) => {\r\n    const functions = {\r\n        noscrollbar: () => {\r\n            element.classList.add(\"noscrollbar\");\r\n        },\r\n\r\n        fillxy: () => {\r\n            let className = cssParser({\r\n                width: \"100%\",\r\n                height: window.innerHeight + \"px\",\r\n            });\r\n            element.classList.add(className);\r\n        },\r\n\r\n        fillx: () => {\r\n            let className = cssParser({\r\n                width: \"100%\",\r\n            });\r\n            element.classList.add(className);\r\n        },\r\n\r\n        filly: () => {\r\n            let className = cssParser({\r\n                height: window.innerHeight + \"px\",\r\n            });\r\n            element.classList.add(className);\r\n        },\r\n\r\n        scrollxy: () => {\r\n            let className = cssParser({\r\n                overflow: \"auto\",\r\n            });\r\n            element.classList.add(className);\r\n        },\r\n        scrollx: () => {\r\n            let className = cssParser({\r\n                overflowX: \"auto\",\r\n            });\r\n            element.classList.add(className);\r\n        },\r\n        scrolly: () => {\r\n            let className = cssParser({\r\n                overflowY: \"auto\",\r\n            });\r\n            element.classList.add(className);\r\n        },\r\n        left: () => {\r\n            let className = cssParser({\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\",\r\n            });\r\n            element.classList.add(className);\r\n        },\r\n        right: () => {\r\n            let className = cssParser({\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n            });\r\n            element.classList.add(className);\r\n        },\r\n        center: () => {\r\n            let className = cssParser({\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n            });\r\n            element.classList.add(className);\r\n        },\r\n        vcenter: () => {\r\n            let className = cssParser({\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n            });\r\n            element.classList.add(className);\r\n        },\r\n        bottom: () => {\r\n            let className = cssParser({\r\n                display: \"flex\",\r\n                alignItems: \"flex-end\",\r\n            });\r\n            element.classList.add(className);\r\n        },\r\n        top: () => {\r\n            let className = cssParser({\r\n                display: \"flex\",\r\n                alignItems: \"flex-start\",\r\n            });\r\n            element.classList.add(className);\r\n        },\r\n        horizontal: () => {\r\n            let className = cssParser({\r\n                display: \"flex\",\r\n                flexDirection: \"row !important\",\r\n            });\r\n            element.classList.add(className);\r\n        },\r\n        vertical: () => {\r\n            let className = cssParser({\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n            });\r\n            element.classList.add(className);\r\n        },\r\n    };\r\n\r\n    options\r\n        .toLowerCase()\r\n        .replace(/\\s/g, \"\")\r\n        .split(\",\")\r\n        .forEach((el) => {\r\n            if (viewOptions.includes(el)) {\r\n                // @ts-ignore\r\n                functions[el]();\r\n            } else {\r\n                console.error(`Unknown option: ${el}`);\r\n            }\r\n        });\r\n};\r\n\r\n/**\r\n * An internal api used by containers and elements, this\r\n * function adds css required for certain types of\r\n * layouts.\r\n * @param {HTMLElement} layout\r\n * @param {string} type\r\n * @param {string} options\r\n */\r\nfunction layoutFitApi(layout, type, options) {\r\n    options ? optionsApi(layout, options) : null;\r\n\r\n    let layoutTYPE = type.toLowerCase();\r\n\r\n    if (layoutTYPE == \"linear\") {\r\n        let className = cssParser({\r\n            display: \"inline-flex\",\r\n            position: \"relative !important\",\r\n            flexDirection: \"column !important\",\r\n        });\r\n        layout.classList.add(className);\r\n    } else if (layoutTYPE == \"absolute\") {\r\n        let className = cssParser({\r\n            display: \"flex\",\r\n        });\r\n        layout.classList.add(className);\r\n    } else console.error(\"Unknown Layout \", layout);\r\n}\r\n\r\nlet $layoutInitializer = class extends $uiControl {\r\n    constructor(type, options) {\r\n        super();\r\n\r\n        this.element = document.createElement(\"div\");\r\n        this.element.id = generateId();\r\n        this.element.type = \"Layout\";\r\n\r\n        type ? layoutFitApi(this.element, type, options) : null;\r\n    }\r\n};\r\n\r\nlet $componentInitalizer = class extends $uiControl {\r\n    constructor(tag, parent, props) {\r\n        super();\r\n        /** @type {HTMLElement} */\r\n        this.element = document.createElement(tag);\r\n        this.element.id = generateId();\r\n\r\n        Object.entries(props).forEach(([key, value]) => {\r\n            requestAnimationFrame(() => {\r\n                this.element[key] = value;\r\n            });\r\n        });\r\n\r\n        if (parent instanceof $uiControl) {\r\n            parent.addChild(this);\r\n        } else {\r\n            console.error(\"No Parent For Component To Attach To.\");\r\n            return;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * creates a layout, it takes in child components.\r\n * @param {string} type - The type of container (e.g., 'div', 'section').\r\n * @param {string} options - Alignment options\r\n * @returns {HTMLDivElement}\r\n */\r\nexport const $layout = function (type = \"linear\", options = \"fillxy, vcenter\") {\r\n    return new $layoutInitializer(type, options);\r\n};\r\n\r\n/**\r\n *\r\n * @param {HTMLElementTagNameMap} tag\r\n * @param {InstanceType<$uiControl>} parent\r\n * @param {Object} props\r\n */\r\nexport const $component = function (tag, parent, props = {}) {\r\n    return new $componentInitalizer(tag, parent, props);\r\n};\r\n\r\n/**\r\n * This function is used to attach the main component\r\n * of your app, so as to mount plugins\r\n * @param {Function} mainComponent\r\n * @returns app\r\n */\r\nexport const $createApp = function (mainComponent) {\r\n    const app = {\r\n        _rootComponent: mainComponent,\r\n        _plugins: [],\r\n\r\n        /**\r\n         * An Elements Id\r\n         * The provided string is queried so that the\r\n         * main component is appended to it.\r\n         * @param {string} selector\r\n         * @returns this\r\n         */\r\n        mount: function (selector) {\r\n            const container = document.querySelector(selector);\r\n            if (!container) {\r\n                console.error(`No element found for selector \"${selector}\"`);\r\n                return;\r\n            }\r\n\r\n            document.body.style.margin = \"0\";\r\n            document.body.style.width = \"100%\";\r\n\r\n            container.innerHTML = \"\";\r\n            const instance = this._rootComponent;\r\n            container.appendChild(instance.element);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {Function} plugin\r\n         * @returns this\r\n         */\r\n        use(plugin) {\r\n            if (typeof plugin._install === \"function\") {\r\n                plugin._install(this);\r\n                this._plugins.push(plugin);\r\n            }\r\n            return this;\r\n        },\r\n    };\r\n    return app;\r\n};\r\n","/**\r\n * signal Method allows you to use plain signals, it takes in plain values and gives reactivity.\r\n * @param {any} defaultValue\r\n */\r\nexport const $signal = function (defaultValue = null) {\r\n    let internal_variable = defaultValue;\r\n    let subscriptions = [];\r\n\r\n    /**\r\n     * notify the user\r\n     * @param {Function} fn\r\n     */\r\n    const notify = function (fn) {\r\n        for (let subscriber of subscriptions) {\r\n            subscriber(internal_variable);\r\n        }\r\n    };\r\n    return {\r\n        /**\r\n         * set the signal's value\r\n         * @param {any} val\r\n         */\r\n        set value(val) {\r\n            internal_variable = val;\r\n            notify();\r\n        },\r\n\r\n        /**\r\n         * returns the signals value\r\n         * @returns internal_variable\r\n         */\r\n        get value() {\r\n            return internal_variable;\r\n        },\r\n\r\n        /**\r\n         * subscribe to the signal\r\n         * @param {Function} fn\r\n         */\r\n        subscribe: (fn) => {\r\n            subscriptions.push(fn);\r\n        },\r\n    };\r\n};\r\n\r\n/**\r\n * add a signal that takes in the defaultValue as an object\r\n * @param {Object} initialValue = {}\r\n */\r\nexport const $store = function (initialValue = {}) {\r\n    let state = { ...initialValue };\r\n    const listeners = new Set();\r\n\r\n    return {\r\n        /**\r\n         * set the signal's value\r\n         * @param {any} val\r\n         */\r\n        set(key, value) {\r\n            state[key] = value;\r\n            listeners.forEach((listener) => listener(state));\r\n        },\r\n\r\n        /**\r\n         * returns the signals value\r\n         * @returns internal_variable\r\n         */\r\n        get(key) {\r\n            return state[key];\r\n        },\r\n\r\n        /**\r\n         * subscribe to the signal\r\n         * @param {Function} fn\r\n         */\r\n        subscribe(listener) {\r\n            listeners.add(listener);\r\n            return () => listeners.delete(listener);\r\n        },\r\n    };\r\n};\r\n","import { $uiControl } from \"./+reckt.core.js\";\r\nimport { $signal } from \"./signals.js\";\r\n\r\nconst defaultLanguage = navigator.language || navigator.userLanguage;\r\nconst defaultLangCode = defaultLanguage.split(\"-\")[0];\r\nlet translations = {};\r\n\r\nlet currentLang;\r\n\r\nexport const $localize = async function (defaultLang = defaultLangCode, jsonSource) {\r\n    currentLang = $signal(defaultLang);\r\n\r\n    const response = await fetch(jsonSource);\r\n    if (!response.ok) {\r\n        console.log(\"Translation File Not Loaded\");\r\n        return;\r\n    }\r\n\r\n    const loadedTranslations = await response.json();\r\n    translations = { ...translations, ...loadedTranslations };\r\n};\r\n\r\nexport const $setLanguage = function (langCode) {\r\n    currentLang.value = langCode;\r\n};\r\n\r\nlet $localizedText = function (key, placeholders) {\r\n    if (!currentLang || !currentLang.value) {\r\n        return key;\r\n    }\r\n\r\n    const langData = translations[currentLang.value] || translations[defaultLangCode] || {};\r\n    let translation = langData[key] || key;\r\n    if (placeholders) {\r\n        Object.keys(placeholders).forEach((placeholder) => {\r\n            translation = translation.replace(`{${placeholder}}`, placeholders[placeholder]);\r\n        });\r\n    }\r\n    return translation;\r\n};\r\n\r\n/**\r\n * Set the text accordingly to the languageCode and provided keys\r\n * @param {object} localizingFn\r\n * @param {string} key\r\n * @param {object} placeholders\r\n */\r\n$uiControl.prototype.localizedText = async function (key, placeholders) {\r\n    if (!currentLang || !currentLang.value) {\r\n        return key;\r\n    }\r\n\r\n    const localizedText = await $localizedText(key, placeholders);\r\n\r\n    this.element.textContent = localizedText;\r\n\r\n    currentLang.subscribe(async () => {\r\n        const localizedText = await $localizedText(key, placeholders);\r\n        this.element.textContent = localizedText;\r\n    });\r\n};\r\n","// @ts-nocheck\r\n\r\n/**\r\n * Hash Based Router, Takes In Your Routes, Provided As a Dictionary\r\n * @param {Array<Object>} hashParam\r\n */\r\n\r\nexport const $hashRouter = function (hashParam) {\r\n    const plugin = {\r\n        routes: hashParam,\r\n        currentRoute: null,\r\n\r\n        _init: function () {\r\n            if (!window.location.hash) {\r\n                window.location.hash = `#index`;\r\n            } else this._handleHashChange();\r\n\r\n            window.onhashchange = this._handleHashChange.bind(this);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @param {any} app\r\n         */\r\n        _install: function (app) {\r\n            this._init();\r\n            app.router = this;\r\n        },\r\n\r\n        _render: function () {\r\n            const container = document.querySelector(\"#app\");\r\n            if (container) {\r\n                container.innerHTML = \"\";\r\n\r\n                // @ts-ignore\r\n                if (this.currentRoute && this.currentRoute.component) {\r\n                    // @ts-ignore\r\n                    container.appendChild(this.currentRoute.component.element);\r\n                } else console.error(\"No valid component found for route\");\r\n            }\r\n            return this;\r\n        },\r\n\r\n        _handleHashChange: function () {\r\n            const hash = window.location.hash.slice(1) || \"/\";\r\n\r\n            // @ts-ignore\r\n            const route = this.routes.find((r) => r.path === hash);\r\n\r\n            if (route) {\r\n                // @ts-ignore\r\n                this.currentRoute = route;\r\n                this._render();\r\n            } else console.error(`Route not found: ${hash}`);\r\n        },\r\n\r\n        /**\r\n         * which route to head to.\r\n         * @param {string} path\r\n         * @returns\r\n         */\r\n        navigate: function (path) {\r\n            // @ts-ignore\r\n            const route = this.routes.find((r) => r.path === path);\r\n            if (route) {\r\n                // @ts-ignore\r\n                this.currentRoute = route;\r\n                window.location.hash = path;\r\n                this._render();\r\n            } else console.error(`Route not found: ${path}`);\r\n\r\n            return this;\r\n        },\r\n\r\n        back: function () {\r\n            history.back();\r\n        },\r\n\r\n        forward: function () {\r\n            history.forward();\r\n        },\r\n    };\r\n    return plugin;\r\n};\r\n","/**\r\n * log an error to the console\r\n * @param {string} detail\r\n */\r\nexport const $error = function (detail) {\r\n    console.log(detail);\r\n};\r\n","// @ts-nocheck\r\nimport { $error } from \"./debugger.js\";\r\n\r\n/**\r\n * showIF method allows you to hide or show an element if the restingParameter is truthy\r\n * @param {Boolean} restingParameter\r\n * @param {instanceOf<$uiControl>} onTruthyElement\r\n * @param {instanceOf<$uiControl>} onFalseyElement\r\n */\r\nexport const $showIF = function (restingParameter, onTruthyElement, onFalseyElement) {\r\n    if (onTruthyElement === undefined || onFalseyElement === undefined) {\r\n        $error(`showIF not called, one of the elements is undefined`);\r\n        return;\r\n    }\r\n    restingParameter ? onTruthyElement.show() : onTruthyElement.hide();\r\n    !restingParameter ? onFalseyElement.show() : onFalseyElement.hide();\r\n};\r\n\r\n/**\r\n * show a fallback view during an async operation, then swap it out when done.\r\n * @param {asyncFunction} resource\r\n * @param {instanceOf<$uiControl>} fallback\r\n * @param {instanceOf<$uiControl>} controlInSuspension\r\n */\r\nexport const $suspense = (resource, fallback, controlInSuspension) => {\r\n    const subscriptions = [];\r\n\r\n    const notify = () => subscriptions.forEach((subscriber) => subscriber());\r\n\r\n    if (controlInSuspension.type === \"Layout\") {\r\n        if (!controlInSuspension.hasChild(fallback)) {\r\n            $error(`FallBack is not a child of ${controlInSuspension}`);\r\n            return;\r\n        }\r\n\r\n        const fallback_id = fallback.id;\r\n        const incremented_children_array = Object.keys(controlInSuspension.children)\r\n            .map(Number)\r\n            .map((childId) => childId + 1);\r\n\r\n        const hideChildren = () => {\r\n            incremented_children_array.forEach((child_id) => {\r\n                if (child_id !== fallback_id) {\r\n                    const element = document.getElementById(\"reckt-id-\" + child_id);\r\n                    if (element) element.style.display = \"none\";\r\n                }\r\n            });\r\n        };\r\n\r\n        const showChildren = () => {\r\n            fallback.hide();\r\n            incremented_children_array.forEach((child_id) => {\r\n                if (child_id !== fallback_id) {\r\n                    const element = document.getElementById(\"reckt-id-\" + child_id);\r\n                    if (element) element.style.display = \"block\";\r\n                }\r\n            });\r\n        };\r\n\r\n        hideChildren();\r\n\r\n        Promise.resolve(resource())\r\n            .then(() => {\r\n                showChildren();\r\n                notify();\r\n            })\r\n            .catch(() => hideChildren());\r\n    } else {\r\n        fallback.show();\r\n        controlInSuspension.hide();\r\n\r\n        Promise.resolve(resource())\r\n            .then(() => {\r\n                fallback.hide();\r\n                controlInSuspension.show();\r\n                notify();\r\n            })\r\n            .catch(() => {\r\n                fallback.show();\r\n                controlInSuspension.hide();\r\n            });\r\n    }\r\n\r\n    return {\r\n        /**\r\n         * call a function after the new view is added\r\n         * @param {Function} fn\r\n         */\r\n        effects: (fn) => subscriptions.push(fn),\r\n    };\r\n};\r\n"],"names":["$uiControl","child","props","key","value","event","handler","_a","styles","className","cssParser","Fn","bool","idCount","classnameCount","generateId","generateClassName","values","styleSheet","cssString","nestedCssRules","mediaQueryRules","parseStyles","selector","baseStyles","pseudoClass","result","str","i","nestedCssString","rule","media","viewOptions","optionsApi","element","options","functions","el","layoutFitApi","layout","type","layoutTYPE","$layoutInitializer","$componentInitalizer","tag","parent","$layout","$component","$createApp","mainComponent","container","instance","plugin","$signal","defaultValue","internal_variable","subscriptions","notify","fn","subscriber","val","$store","initialValue","state","listeners","listener","defaultLanguage","defaultLangCode","translations","currentLang","$localize","defaultLang","jsonSource","response","loadedTranslations","$setLanguage","langCode","$localizedText","placeholders","translation","placeholder","localizedText","$hashRouter","hashParam","app","hash","route","r","path","$error","detail","$showIF","restingParameter","onTruthyElement","onFalseyElement","$suspense","resource","fallback","controlInSuspension","fallback_id","incremented_children_array","childId","hideChildren","child_id","showChildren"],"mappings":"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"}